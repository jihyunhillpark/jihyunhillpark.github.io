---
layout: post
title:  "백준알고리즘No.1717 - 상호배타적집합(Union,Find) 문제"
author: Jihyunhill
categories: Codingstudy
tags: baekjoon coding test 
---

## 들어가며

상호배타적집합 문제?이름만 들어서는 어떤 문제인지 감이 잘 잡히지 않는다. 말그대로 받아들이자. 서로 배타적인 부분 집합으로 나눠진 원소들에 대한 정보를 저장하 조직하는 자료구조이다. 즉, 하나의 원소가 이곳 저곳에 속하지 않는다는 말이다.  

## 어떻게 풀 것인가?

백준 1717번 문제에서는 세 개의 수를 입력하는데 첫번째 숫자의 값이 1이냐 0이냐에 따른 두 가지 연산을 수행할 수 있다.

 - 상호배타적집합 문제는 주어진 원소들을 하나의 집합으로 모으는 연산Union과,
 - 주어진 원소가 속한 집합에 무엇인지 확인하는 Find연산  

두 연산은 각각 함수로 구현할 수 있다. 단, Union연산에서 Find를 사용하기 때문에 Find 함수를 먼저 정의해야 한다.

### Find 

1. find연산은 속한 집합을 찾는다. 

{% highlight javascript %}
int find(int a)
{
  if( parent[a] == 0) return parent[a] = a;
  else return parent[a] = find(parent[a]);
}
{% endhighlight %}

2. Union연산은 두 원소가 속한 집합을 하나의 집합으로 합하는 것이다. 이 때 최상위 조상 노드의 수가 작은 집합으로 합하는 방향을 정한다.
{% highlight javascript %}
void union_set(int a, int b)
{
   a = parent[a];
   b = parent[b];
   if( a == b) return;
   if( a > b ) swap(a,b);
   parent[b] = a;
}
{% endhighlight %}
## 마치며

이 상호배타적집합 자료구조는 활용범위가 생각보다 넓은 것 같다. 다른 알고리즘으로 짰을 때 복잡한 풀이가 나와도, 이 자료구조를 선택해서 풀었을 때 너 쉽고 간결하고 효율적이르 풀리는 경우가 종종 있다. 알아두자!

## 다른 풀이 방법

나 같은 경우는 parent를 로컬로 선언했는데, 대부분 빠른 풀이를 보면 글로벌로 먼저 공간을 잡아두고 푸는 것 같다. 그런데 왜 내가 그렇게 하니까 메모리초과가 뜨는 거지!?ㅇ0ㅇ!
