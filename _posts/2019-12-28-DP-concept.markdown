---
layout: post
title:  "DP(Dynamic Programming)동적계획법"
date:   2019-12-28 05:33:59
author: Jihyunhill
categories: Algorithms
tags:	Algorithms coding test 종만북
---

# DP란 무엇인가?
DP는 Dynamic Programming이라는 뜻으로 한국어로 번역하면 '동적 계획법'이다.
(간혹 동적 프로그래밍이라고 하나 사실상 동적 계획법이 맞는 표현이며, 엄연히 다른 것이다.) 동적계획법 분할 정복(Divide & Conquer)과 같은 접근 방식을 취한다. 동적 계획법 역시 주어진 문제를 더 작은 문제들로 쪼갠 뒤, 그 작은 문제들(sub problem)을 해결/계산하고, 이 답들로부터 원래 주어진 문제에 대한 답을 도출해 내기 때문이다.          

*__그럼 분할정복과 DP는 뭐가 다른건데?__*
두 알고리즘의 차이점은 __문제를 나누는 방식__ 이다.      

분할 정복 : 주어진 문제의 부분 문제들 사이에 서로 상관 관계가 없는 경우 사용하기 적절하다. 즉 부분문제가 한번만 사용될 때 적합하다.   

동적 계획법 : 문제를 풀기 위해 부분 문제를 푼다고 앞에서 말했다. 그런데 이 부분 문제가 두 개 이상의 문제를 푸는데 사용될 수 된다면?(예를 들어서 피보나치 함수 5항을 구하기 위해서 2항을 3번이나 사용하게 된다. 이는 4항과 3항의 문제를 푸는 데에도 2항이 사용되기 때문이다. f(3)=f(2)+f(1),f(4)=f(3)+f(2)=f(2)+f(2)+f(1),f(5)=f(4)+f(3)=f(2)+f(2)+f(2)+f(1)) 이처럼 문제의 답을 구하기 위해 매번 새로이 부분문제를 계산하는 대신, __한번만 계산하고 그 결과를 저장해 두고두고 사용하는__ 방법을 동적 계획법이라고 한다. 이렇게 하면 속도가 빨라진다! (* 부분문제의 답을 저장하는 공간을 캐시(cache)라고 부르고, 두 번 이상 계산되는 부분 문제를 중복되는 부분 문제(overlapping subproblem)라고 부른다)     

유명한 동적 계획 문제 : 이항계수(파스칼의 삼각형 - nCr = n-1Cr-1 + n-1Cr), 피보나치, 최단경로       
&#42 이항계수랑 피보나치는 분할정복으로 풀 수 있긴 하다.
